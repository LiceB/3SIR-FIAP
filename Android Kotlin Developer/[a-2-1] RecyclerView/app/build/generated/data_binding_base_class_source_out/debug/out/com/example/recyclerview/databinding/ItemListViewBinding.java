// Generated by view binder compiler. Do not edit!
package com.example.recyclerview.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.recyclerview.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemListViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton btnEdit;

  @NonNull
  public final ImageButton btnRemove;

  @NonNull
  public final CardView cardViewItem;

  @NonNull
  public final ConstraintLayout itemDetail;

  @NonNull
  public final TextView txtDetail;

  @NonNull
  public final TextView txtTitle;

  private ItemListViewBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton btnEdit,
      @NonNull ImageButton btnRemove, @NonNull CardView cardViewItem,
      @NonNull ConstraintLayout itemDetail, @NonNull TextView txtDetail,
      @NonNull TextView txtTitle) {
    this.rootView = rootView;
    this.btnEdit = btnEdit;
    this.btnRemove = btnRemove;
    this.cardViewItem = cardViewItem;
    this.itemDetail = itemDetail;
    this.txtDetail = txtDetail;
    this.txtTitle = txtTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemListViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemListViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_list_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemListViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnEdit;
      ImageButton btnEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnEdit == null) {
        break missingId;
      }

      id = R.id.btnRemove;
      ImageButton btnRemove = ViewBindings.findChildViewById(rootView, id);
      if (btnRemove == null) {
        break missingId;
      }

      id = R.id.cardViewItem;
      CardView cardViewItem = ViewBindings.findChildViewById(rootView, id);
      if (cardViewItem == null) {
        break missingId;
      }

      id = R.id.itemDetail;
      ConstraintLayout itemDetail = ViewBindings.findChildViewById(rootView, id);
      if (itemDetail == null) {
        break missingId;
      }

      id = R.id.txtDetail;
      TextView txtDetail = ViewBindings.findChildViewById(rootView, id);
      if (txtDetail == null) {
        break missingId;
      }

      id = R.id.txtTitle;
      TextView txtTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtTitle == null) {
        break missingId;
      }

      return new ItemListViewBinding((ConstraintLayout) rootView, btnEdit, btnRemove, cardViewItem,
          itemDetail, txtDetail, txtTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
